#include "ChatMainWindow.h"
#include "ui_ChatMainWindow.h"
ChatMainWindow::ChatMainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::ChatMainWindow)
{
    ui->setupUi(this);
    setAllStyleSheet();
    initChat();
    initMessageChatList();

    QObject::connect(musicPlayer, &QMediaPlayer::stateChanged, [&](QMediaPlayer::State state) {
        if (state == QMediaPlayer::PlayingState) {
            // Èü≥‰πêÊ≠£Âú®Êí≠Êîæ
            qDebug() << "Music is playing";
        } else if (state == QMediaPlayer::StoppedState) {
            // Èü≥‰πêÂ∑≤ÂÅúÊ≠¢Êí≠Êîæ
            qDebug() << "Music stopped";
        }
    });

    connect(_socket,SIGNAL(connected()),this,SLOT(onConnect()));
}



ChatMainWindow::~ChatMainWindow()
{
    //ÈáäÊîæÂÜÖÂ≠ò
    for (ListItem& listItem : _chatItems)
    {
        delete listItem.item;
        delete listItem.widget;
    }
    _chatItems.clear();

    //    for (QTreeWidgetItem* item : friendsItems)
    //    {
    //        delete item; // ÈáäÊîæÂÜÖÂ≠ò
    //        item = nullptr; // Â∞ÜÊåáÈíàËÆæÁΩÆ‰∏∫nullptr
    //    }
    friendsItems.clear();

    delete musicPlayer;
    delete ui;
    delete _socket;
    delete MessageDelegate;

    for (QStringListModel* model : Messagemodel)
    {
        delete model;
    }
    Messagemodel.clear();

    delete mySelf;
    emit exitWindow();
}

void ChatMainWindow::setAllStyleSheet()
{
    //ÂõæÊ†á
    QIcon iconIcon(":/picture/icon.jpg");
    setWindowIcon(iconIcon);

    //ÊêúÁ¥¢Ê†è
    ui->searchLineEdit->setPlaceholderText("üîçÊêúÁ¥¢");
    ui->searchLineEdit->setAlignment(Qt::AlignLeft);   //Â∑¶‰æß

    //Â∑¶‰æßÂØºËà™Ê†è
    ui->chatButton->move(QPoint(5,10));


    //Â§¥ÂÉè
    QIcon photoIcon(":/picture/icon.jpg");
    ui->photoButton->setIcon(photoIcon);
    ui->photoButton->setIconSize(ui->photoButton->size());
    //ËÆæÁΩÆËÅäÂ§©„ÄÅÂ•ΩÂèã„ÄÅÁ©∫Èó¥„ÄÅÊñá‰ª∂„ÄÅËÆæÁΩÆÁöÑÂõæÊ†á
    QIcon Icon1(":/picture/chatblue.png");
    ui->chatButton->setIcon(Icon1);
    ui->chatButton->setIconSize(ui->chatButton->size());

    QIcon Icon2(":/picture/friends.png");
    ui->friendsButton->setIcon(Icon2);
    ui->friendsButton->setIconSize(ui->friendsButton->size());

    QIcon Icon3(":/picture/space.png");
    ui->spaceButton->setIcon(Icon3);
    ui->spaceButton->setIconSize(ui->spaceButton->size());

    QIcon Icon4(":/picture/file.png");
    ui->fileButton->setIcon(Icon4);
    ui->fileButton->setIconSize(ui->fileButton->size());

    QIcon Icon5(":/picture/setting.png");
    ui->settingButton->setIcon(Icon5);
    ui->settingButton->setIconSize(ui->settingButton->size());

    //stackwidgetÈ¶ñÂÖàÈªòËÆ§ËÆæÁΩÆ‰∏∫Ê∂àÊÅØÂàóË°®
    ui->stackedWidget->setCurrentIndex(0);

    //ÂèëÈÄÅÊ∂àÊÅØ
    QObject::connect(this, &ChatMainWindow::ctrlEnterPressed, ui->sendMessageButton, &QPushButton::click);
    ui->sendMessageButton->setEnabled(false);

    //Âè≥ËæπÊ†èÂ°´ÂÖÖ
    //QPixmap rightSidePixmap(":/picture/rightSide.jpg");
    //ui->rightSideLabel->setPixmap(rightSidePixmap);
    //ui->rightSideLabel->setScaledContents(true);

    //Êí≠ÊîæÈü≥‰πê
    musicPlayer=new QMediaPlayer(this);
    musicPlayer->setMedia(QUrl("qrc:/music/seeYouAgain.mp3"));
    isPlaying=false;
    musicPlayer->setVolume(50);


    //socket
    _socket=new QTcpSocket;
    connect(_socket,SIGNAL(readyRead()),this,SLOT(onSocketReadyRead()));


    //viewÁöÑmodel‰∏édelegate

    MessageDelegate=new ListItemDelegate(ui->chatMessageListView);
    ui->chatMessageListView->setItemDelegate(MessageDelegate);


    this->mySelf=new People("-1");


}

void ChatMainWindow::initChat()
{

    QListWidgetItem* item=new QListWidgetItem(ui->chatListWidget1);
    item->setSizeHint(QSize(ui->friendsTreeWidget->width(),90));
    ui->chatListWidget1->addItem(item);
    theFriendMessage*item1=new theFriendMessage;
    item1->setName("zhoumi");
    ui->chatListWidget1->setItemWidget(item,item1);
    ListItem temp;
    temp.item=item;
    temp.widget=item1;
    _chatItems.push_back(temp);



    QListWidgetItem* item2=new QListWidgetItem(ui->chatListWidget1);
    item2->setSizeHint(QSize(240,90));
    ui->chatListWidget1->addItem(item2);
    theFriendMessage*item3=new theFriendMessage;
    item3->setName("1");
    ui->chatListWidget1->setItemWidget(item2,item3);
    ListItem temp2;
    temp2.item=item2;
    temp2.widget=item3;
    _chatItems.push_back(temp2);
}

void ChatMainWindow::keyPressEvent(QKeyEvent *event)
{
    if (event->modifiers() == Qt::ControlModifier && event->key() == Qt::Key_Return)
    {
        emit ctrlEnterPressed();
    }
}

void ChatMainWindow::initMessageChatList()
{
}

void ChatMainWindow::connectToServer(QString accountName)
{
    //ÊµãËØï‰∏Ä‰∏ãÔºåÊâÄ‰ª•Áî®Êú¨Âú∞ip
    _socket->connectToHost("127.0.0.1",50660);   //ÂÆ¢Êà∑Á´ØËøûÊé•Âà∞ÊúçÂä°Á´ØÁöÑip+port

    sendNameToServer(accountName);
}

void ChatMainWindow::sendNameToServer(QString accountName)
{
    QByteArray str=accountName.toUtf8();
    str.append('\n');
    _socket->write(str);

}

void ChatMainWindow::initMyself(QString account,QVector<QString> friends)
{
    this->mySelf->account=account;
    this->mySelf->friends=friends;
    setWindowTitle(mySelf->account+"----USER");
    initFriends();
}

void ChatMainWindow::ScreenShot()
{
    QPixmap *pixmap=new QPixmap;
    *pixmap=QGuiApplication::primaryScreen()->grabWindow(0);

    QClipboard *clipboard = QGuiApplication::clipboard();
    clipboard->setPixmap(*pixmap);

    *pixmap=pixmap->scaled(ui->messageTextEdit->width()/4,ui->messageTextEdit->height()/2);
    QTextCursor cursor = ui->messageTextEdit->textCursor();
    QTextDocument *document = ui->messageTextEdit->document();
    // Âú®ÂÖâÊ†á‰ΩçÁΩÆÊèíÂÖ•ÂõæÂÉè
    document->addResource(QTextDocument::ImageResource, QUrl("screenshot"), *pixmap);
    cursor.insertImage("screenshot");

    this->show();
    //delete pixmap;

}



void ChatMainWindow::initFriends()
{
    QTreeWidgetItem* firstItem =new QTreeWidgetItem(ui->friendsTreeWidget); // Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™È°∂Á∫ßÈ°πÁõÆ
    friendsItems.push_back(firstItem);
    firstItem->setText(0,"ÊúãÂèã");
    ui->friendsTreeWidget->addTopLevelItem(firstItem);

    qDebug()<<mySelf->friends.size();
    for (int i=0;i<mySelf->friends.size();i++)
    {
        QString friendName=mySelf->friends[i];
        QTreeWidgetItem* item = new QTreeWidgetItem(firstItem);
        item->setText(0, friendName); // Âú®Á¨¨‰∏ÄÂàó‰∏≠ËÆæÁΩÆÊñáÊú¨
        friendsItems.push_back(item);
        // ÂèØ‰ª•ËÆæÁΩÆÊõ¥Â§öÂ±ûÊÄßÂíåÂàóÁöÑÊñáÊú¨
        firstItem->addChild(item);
    }
}



void ChatMainWindow::on_chatButton_clicked()
{
    ui->stackedWidget->setCurrentIndex(0); //Â•ΩÂèãÂàóË°®

    //ÂàáÊç¢ËÅäÂ§©ÂíåÂ•ΩÂèãÊåâÈíÆÁöÑÈ¢úËâ≤
    QIcon Icon1(":/picture/chatblue.png");
    ui->chatButton->setIcon(Icon1);
    ui->chatButton->setIconSize(ui->chatButton->size());
    QIcon Icon2(":/picture/friends.png");
    ui->friendsButton->setIcon(Icon2);
    ui->friendsButton->setIconSize(ui->friendsButton->size());
}


void ChatMainWindow::on_friendsButton_clicked()
{
    qDebug()<<"111";
    ui->stackedWidget->setCurrentIndex(1); //Â•ΩÂèãÂàóË°®
    //initFriends();

    QIcon Icon1(":/picture/chat.png");
    ui->chatButton->setIcon(Icon1);
    ui->chatButton->setIconSize(ui->chatButton->size());
    QIcon Icon2(":/picture/friendsblue.png");
    ui->friendsButton->setIcon(Icon2);
    ui->friendsButton->setIconSize(ui->friendsButton->size());
}





void ChatMainWindow::on_messageTextEdit_textChanged()
{
    //‰∏ç‰∏∫Á©∫,ÂèØ‰ª•ÂèëÈÄÅÊ∂àÊÅØ
    if(ui->messageTextEdit->toPlainText()=="")
    {
        ui->sendMessageButton->setStyleSheet("QPushButton {"
                                             "font: 10pt \"Segoe Print\";"
                                             "background-color: rgb(0, 153, 255);"
                                             "color: rgb(77, 184, 255);"
                                             "border-radius: 10px;"
                                             "padding: 10px;"
                                             "}"
                                             "QPushButton:pressed {"
                                             "background-color: rgb(0, 134, 224);"
                                             "}");
        ui->sendMessageButton->setEnabled(false);
    }
    else
    {
        ui->sendMessageButton->setStyleSheet("QPushButton {"
                                             "font: 10pt \"Segoe Print\";"
                                             "background-color: rgb(0, 153, 255);"
                                             "color: rgb(255,255, 255);"
                                             "border-radius: 10px;"
                                             "padding: 10px;"
                                             "}"
                                             "QPushButton:pressed {"
                                             "background-color: rgb(0, 134, 224);"
                                             "}");
        ui->sendMessageButton->setEnabled(true);
    }
}

void ChatMainWindow::on_chatListWidget1_itemClicked(QListWidgetItem *item)
{
    theFriendMessage* widget=static_cast<theFriendMessage*>(ui->chatListWidget1->itemWidget(item));
    if(widget!=nullptr)
    {
        ui->nameLabel->setText(widget->getName());
    }

    QStringListModel* _model=Messagemodel[ui->nameLabel->text()];
    if(_model==nullptr)
    {
        QStringListModel* model=new QStringListModel;
        Messagemodel[ui->nameLabel->text()]=model;
        _model=model;
    }
    ui->chatMessageListView->setModel(_model);
}


void ChatMainWindow::on_photoButton_clicked()
{
    qDebug()<<"1";
    if(isPlaying==false)
        musicPlayer->play();
    else
        musicPlayer->pause();
    isPlaying=!isPlaying;
}

void ChatMainWindow::onConnect()
{
    qDebug()<<"**Peer Address:"+_socket->peerAddress().toString()+"**";
    qDebug()<<"**Peer Port:"+QString::number(_socket->peerPort())+"**";
}

void ChatMainWindow::onSocketReadyRead()
{
    QString sender="";
    QString message=_socket->readLine();
    qDebug()<<"message"<<message;

    //ÂèñÂá∫ÂèëÊ∂àÊÅØÁöÑ‰∫∫ÁöÑaccountÂíåÊ∂àÊÅØ
    while(_socket->canReadLine())
    {
        message+=_socket->readLine();
    }
    while (!message.isEmpty() && message.endsWith('\n'))
        message = message.chopped(1); // ÁßªÈô§Êú´Â∞æÁöÑÊç¢Ë°åÁ¨¶

    //ÂèëÈÄÅÊñá‰ª∂
    if(message=="###ok")
    {
        qDebug()<<"ok";
        QFile file(filePath);
        if (!file.open(QIODevice::ReadWrite))
        {
            //ËØªÂèñÊñá‰ª∂Â§±Ë¥•
            return;
        }
        qint64 currentlen = 0;//ÂΩìÂâçÂ∑≤ÁªèÂèëÈÄÅÁöÑÂ§ßÂ∞è
        qint64 allLength = file.size();//ÊÄªÊñá‰ª∂Â§ßÂ∞è
        do
        {
            char data[1024];
            qint64 msize = file.read(data, 1024);//ËØªÊñá‰ª∂ÊîæÂÖ•Êâì‰ªñÊï∞ÁªÑ‰∏≠ÔºåËøîÂõûËØªÂèñÂà∞ÁöÑÂ§ßÂ∞è
            _socket->write(data, msize);//ÊääËØªÂèñÂà∞ÁöÑdataÊï∞ÊçÆÂèëÈÄÅÁªôÊúçÂä°Âô®
            currentlen += msize;//ÂÆûÊó∂Ëé∑ÂèñÂΩìÂâçÂèëÈÄÅÁöÑÊñá‰ª∂Â§ßÂ∞è
        } while (currentlen < allLength);//ÂΩìÂèëÈÄÅÊñá‰ª∂Á≠â‰∫éÊñá‰ª∂Â§ßÂ∞èÊó∂ÔºåÂèëÈÄÅÂÆåÊØïÔºåÂæ™ÁéØÁªìÊùü

        return;

    }

    QStringList parts = message.split("###");
    qDebug()<<"parts:"<<parts;
    if(parts.size()==2)
    {
        sender=parts[0];
        message=parts[1];

        //ËÆ©delegateËØÜÂà´ÔºåÂ∑¶ÂØπÈΩê
        message="a1`"+message;

        //
        //ÈÄöËøáÂêçÂ≠óÊù•mapÂá∫ÂØπÂ∫îÁöÑmodelÊòæÁ§∫ÂÆÉ‰ª¨ÁöÑËÅäÂ§©ËÆ∞ÂΩï
        QStringListModel* _model=Messagemodel[sender];
        if(_model==nullptr)
        {
            QStringListModel* model=new QStringListModel;
            Messagemodel[sender]=model;
            _model=model;
        }
        //ui->chatMessageListView->setModel(_model);
        QStringList itemlist = _model->stringList();
        itemlist.append(message);
        _model->setStringList(itemlist);
    }

    else
    {
        parts=message.split("{{{}}}");
        sender=parts[0];
        QString filePath=parts[1];
        filePath="{{{}}}"+filePath;

        QStringListModel* _model=Messagemodel[sender];
        if(_model==nullptr)
        {
            QStringListModel* model=new QStringListModel;
            Messagemodel[sender]=model;
            _model=model;
        }

        QStringList itemlist = _model->stringList();
        itemlist.append(filePath);
        _model->setStringList(itemlist);
    }

    ui->chatMessageListView->update();


}



void ChatMainWindow::on_sendMessageButton_clicked()
{
    QString message = ui->messageTextEdit->toPlainText();
    ui->messageTextEdit->clear();

    // Ê∑ªÂä†Âπ∂Êõ¥Êñ∞modelÊåáÂêëÁöÑstringlist
    //ÊØè‰∏™‰∫∫ÂØπÂ∫îÁùÄ‰∏Ä‰∏™model
    QStringListModel* _model=Messagemodel[ui->nameLabel->text()];
    if(_model==nullptr)
    {
        QStringListModel* model=new QStringListModel;
        Messagemodel[ui->nameLabel->text()]=model;
        _model=model;
    }
    ui->chatMessageListView->setModel(_model);
    QStringList itemlist = _model->stringList();
    itemlist.append(message);
    _model->setStringList(itemlist);


    ui->chatMessageListView->update();


    //ËÆæÁΩÆÁÑ¶ÁÇπÊúÄÊñ∞Áä∂ÊÄÅ
    ui->chatMessageListView->scrollToBottom();
    ui->messageTextEdit->setFocus();

    QByteArray str=message.toUtf8();
    QByteArray name=ui->nameLabel->text().toUtf8();
    str=name+"###"+str;
    str.append('\n');
    _socket->write(str);

    //qDebug() << "Message sent to server: " << message;
}


void ChatMainWindow::on_cutButton_clicked()
{
    this->hide();
    QTimer::singleShot(1000, this, SLOT(ScreenShot()));
}


void ChatMainWindow::on_friendsTreeWidget_currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous)
{
    if(current &&!current->parent())
        return;
    ui->nameLabel->setText(current->text(0));

    QStringListModel* _model=Messagemodel[ui->nameLabel->text()];
    if(_model==nullptr)
    {
        QStringListModel* model=new QStringListModel;
        Messagemodel[ui->nameLabel->text()]=model;
        _model=model;
    }
    ui->chatMessageListView->setModel(_model);
}


void ChatMainWindow::on_selectFileButton_clicked()
{
    qDebug()<<"on_selectFileButton_clicked";

    filePath = QFileDialog::getOpenFileName(nullptr, "ÈÄâÊã©Êñá‰ª∂", "", "ALL FILES(*.*)");

    //Â¶ÇÊûúÊñá‰ª∂‰∏ç‰∏∫Á©∫ÔºåÂàôÁªßÁª≠
    if (!filePath.isEmpty())
    {
        // ËøõË°åÊñá‰ª∂‰º†ËæìÈÄªËæëÂ§ÑÁêÜ
        QFile file(filePath);
        //Ëé∑ÂèñÊñá‰ª∂ÁöÑÁ±ªÂûã
        QFileInfo fileInfo(filePath);
        //file###È´ò‰∏â###100###zhoumi
        qDebug()<<"size:"<<fileInfo.size();
        QString head="file###"+fileInfo.fileName()+"###"+QString::number(fileInfo.size())+"###"+ui->nameLabel->text();
        qDebug()<<head;
        _socket->write(head.toUtf8());



        QStringListModel* _model=Messagemodel[ui->nameLabel->text()];
        if(_model==nullptr)
        {
            QStringListModel* model=new QStringListModel;
            Messagemodel[ui->nameLabel->text()]=model;
            _model=model;
        }
        ui->chatMessageListView->setModel(_model);
        QStringList itemlist = _model->stringList();
        itemlist.append("Â∑≤ÂèëÈÄÅÊñá‰ª∂:"+fileInfo.fileName());
        _model->setStringList(itemlist);


    }
    else
    {
        qDebug()<<"file is empty";
    }
}

